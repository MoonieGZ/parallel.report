---
import Layout from '@layouts/page.astro';

import { Icon } from 'astro-icon';

import Footer from '@components/footer.astro';
import Resource from '@components/home/parallel.astro';
import Line from '@components/underline.astro';

import Header from '@components/home/header.md';
import Notice from '@components/home/notice.mdx';

import { readdir, readFile } from 'node:fs/promises';
import { join } from 'node:path';

interface Contributor {
  bold?: Boolean;
  link: string;
  name: string;
  role: string;
}

let resources = [];

import other from '../parallel/other.json';
const files = await readdir(join('src', 'parallel', 'resources'));

for (const file of files) {
  const pushed = await readFile(`src/parallel/resources/${file}`, 'utf-8');
  const parsed = JSON.parse(pushed);

  resources.push(parsed);
}
---

<Layout
  description="This site covers Guardians who contributed to Destiny 2 and/or its API in a meaningful way, and have received the Parallel Program emblem."
  siteName="parallel.report"
  title="Parallel Program Report"
>
  <Header />

  {
    resources.map((resource) => {
      return (
        <Resource class={resource.title.replace(/\s+/g, '').toLowerCase()}>
          <h2 class="resource-name" slot="resource-name">
            <a href={resource.site} title={resource.title} target="_blank">
              {resource.title}
              <Icon size={15} name="mdi:external-link" />
            </a>

            <img
              slot="resource-icon"
              class="parallel-img"
              src={resource.image.file}
              width={resource.image.width}
              height={resource.image.height}
              alt={`${resource.title} Logo`}
              title={`${resource.title} Logo`}
            />
          </h2>

          <p class="resource-description" slot="resource-description">
            {resource.description}
          </p>

          <ul class="contributors">
            {resource.contributors.map((contributor: Contributor) => {
              return (
                <>
                  <li class:list={['contributor', { maintainer: contributor.bold }]}>
                    {/* prettier-ignore */}
                    <span>
                      <a href={contributor.link} title={contributor.name} target="_blank">{contributor.name}</a>: {resource.prefix} {contributor.role}
                    </span>
                    {/* prettier-ignore */}
                  </li>
                </>
              );
            })}
          </ul>
        </Resource>
      );
    })
  }

  <Line>Other resources</Line>
  <ul class="other-resources">
    {
      other.authors.map((author) => {
        return (
          /* prettier-ignore */ <li>
            <a href={author.link} title={author.name} target="_blank">{author.name}</a>:
            <a href={author.resources[0].link} title={author.resources[0].name} target="_blank">{author.resources[0].name}</a>,
            {author.resources[0].description}
          </li> /* prettier-ignore */
        );
      })
    }
  </ul>

  <Footer>
    <Notice />
  </Footer>

  <style>
    .maintainer {
      font-weight: bold;
    }
  </style>
</Layout>
