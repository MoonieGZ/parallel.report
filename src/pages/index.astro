---
import Layout from '@layouts/Page.astro';

import { Icon } from 'astro-iconify';

import Footer from '@components/Footer.astro';
import Resource from '@components/home/Resource.astro';
import Link from '@components/Link.astro';
import Line from '@components/Underline.astro';

import Header from '@components/home/Header.md';
import Notice from '@components/home/Notice.md';

import type { Contributor, Resources } from '~/types';

import other from '../parallel/other.json';

const resources = await Astro.glob<Resources>('../parallel/resources/*.json');
---

<Layout
  description="This site covers Guardians who contributed to Destiny 2 and/or its API in a meaningful way, and have received the Parallel Program emblem."
  pageTitle="Parallel Program Report"
  title="Home | Parallel Program Report"
>
  <main class="content">
    <img src="/favicon.png" alt="Parallel Program emblem" />
    <Header />

    {
      resources.map((resource) => {
        return (
          <Resource class={resource.title.replace(/\s+/g, '').toLowerCase()}>
            <span class="resource-name text-4xl font-bold" slot="resource-name">
              <Link href={resource.site} title={resource.title} target="_blank">
                {resource.title} <Icon size={30} name="mdi:external-link" class="pl-3" />
              </Link>

              <img
                slot="resource-icon"
                class="parallel-img"
                src={resource.image.file}
                height={resource.image.height}
                width={resource.image.width}
                alt={`Logo of ${resource.title}`}
                title={`Logo of ${resource.title}`}
              />
            </span>

            <p class="resource-description pb-5" slot="resource-description">
              {resource.description}
            </p>

            <ul
              class="resource-contributors flex flex-grow list-inside list-disc flex-col gap-1 pb-5 pt-2"
              slot="resource-contributors"
            >
              {resource.contributors.map((contributor: Contributor) => {
                return (
                  <>
                    <li class:list={['contributor', { maintainer: contributor.bold }]}>
                      {/* prettier-ignore */}
                      <span>
                      <Link href={contributor.link} title={contributor.name} target="_blank">{contributor.name}</Link>: {resource.prefix} {contributor.role}
                    </span>
                      {/* prettier-ignore */}
                    </li>
                  </>
                );
              })}
            </ul>
          </Resource>
        );
      })
    }

    <Line>Other resources</Line>
    <ul class="other-resources flex flex-grow list-inside list-disc flex-col gap-1 pb-5 pt-2">
      {
        other.authors.map((author) => {
          return (
            /* prettier-ignore */ <li class={author.resources[0].name.replace(/\s+/g, '').toLowerCase()}>
                <Link href={author.link} title={author.name} target="_blank">{author.name}</Link>:
                <Link href={author.resources[0].link} title={author.resources[0].name} target="_blank">{author.resources[0].name}</Link>,
                {author.resources[0].description}
            </li>
            /* prettier-ignore */
          );
        })
      }
    </ul>

    <Footer>
      <hr class="mb-5 text-ctp-pink" />
      <Notice />
    </Footer>
  </main>

  <style>
    .maintainer {
      font-weight: bold;
    }

    .resource-name,
    .resource-contributors {
      @apply font-display;
    }
  </style>
</Layout>
